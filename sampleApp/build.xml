<project name="helloworld" default="dev">

    <property name="app.name" value="${ant.project.name}"/>
    <property name="build.label" value="${env.GO_PIPELINE_LABEL}"/>

    <property name="main.src.dir" value="${basedir}/src/main/java"/>
    <property name="test.src.dir" value="${basedir}/unittests/java"/>
    <property name="acceptance.src.dir" value="${basedir}/src/acceptance/java"/>
    <property name="web.dir" value="${basedir}/web"/>

    <!-- Output Directories -->
    <property name="target.dir" value="${basedir}/target"/>
    <property name="classes.dir" value="${target.dir}/classes"/>
    <property name="test.classes.dir" value="${target.dir}/test"/>
    <property name="dist.dir" value="${target.dir}/dist"/>
    <property name="reports.dir" value="${target.dir}/reports"/>
    <property name="lib.dir" value="${basedir}/lib"/>

    <!-- Output Files -->
    <property name="main.war" value="${dist.dir}/${app.name}.war"/>
    <property name="main.jar" value="${target.dir}/${app.name}.jar"/>
    <property name="unit.jar" value="${target.dir}/${app.name}-unit.jar"/>
    <property name="acceptance.jar" value="${target.dir}/${app.name}-acceptance.jar"/>

    <path id="main.compile.classpath">
        <fileset dir="${lib.dir}/build" includes="*.jar"/>
    </path>

    <path id="test.classpath">
        <fileset dir="${lib.dir}/tools">
            <include name="junit-4.5.jar"/>
            <include name="mockito-all-1.7.jar"/>
        </fileset>
    </path>

    <path id="test.compile.classpath">
        <pathelement location="${main.jar}"/>
        <path refid="main.compile.classpath"/>
        <path refid="test.classpath"/>
    </path>

    <path id="test.runtime.classpath">
        <path refid="test.compile.classpath"/>
        <pathelement location="${unit.jar}"/>
    </path>

    <target name="clean" description="Deletes the target directory and all its contents. ">
        <delete dir="${target.dir}"/>
    </target>

    <target name="dev" depends="clean, test-and-report, war-app" description="The default target to perform all pre-commit operations." >
    </target>

    <target name="compile-app" description="Compiles source code for the Application." >
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${main.src.dir}" destdir="${classes.dir}"
               classpathref="main.compile.classpath"
               debug="true"
               includeantruntime="false"/>
    </target>

    <target name="compile-tests" depends="jar-app" description="Compiles Junit source code for the unit tests." >
        <mkdir dir="${test.classes.dir}"/>
        <javac srcdir="${test.src.dir}" destdir="${test.classes.dir}"
               classpathref="test.compile.classpath"
               debug="true"
               includeantruntime="false"/>
    </target>

    <target name="jar-app" depends="compile-app" >
        <jar destfile="${main.jar}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Build-Label"
                           value="${build.label}"/>
            </manifest>
        </jar>
    </target>

    <target name="jar-tests" depends="compile-tests" >
        <jar destfile="${unit.jar}" basedir="${test.classes.dir}">
            <manifest>
                <attribute name="Build-Label"
                           value="${build.label}"/>
            </manifest>
        </jar>
    </target>

    <target name="test-and-report" depends="jar-tests" description="Run the unit tests and generate reports." >
        <mkdir dir="${reports.dir}/unit"/>
        <junit printsummary="yes" fork="true" haltonerror="false"
               haltonfailure="false" forkmode="once">
            <classpath>
                <path refid="test.runtime.classpath"/>
            </classpath>
            <formatter type="xml"/>

            <batchtest todir="${reports.dir}/unit"
                       failureproperty="unit.test.failed">
                <fileset dir="${test.src.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>

        <mkdir dir="${reports.dir}/unit-html"/>

        <junitreport todir="${reports.dir}/unit-html">
            <fileset dir="${reports.dir}/unit">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${reports.dir}/unit-html"/>
        </junitreport>

        <fail if="unit.test.failed" message="Unit tests failed"/>
    </target>

    <target name="war-app" depends="jar-app" description="Creates a distributable package">
        <echo message="Packaging for build label ${build.label}"/>
        <mkdir dir="${dist.dir}"/>
        <war warfile="${main.war}" webxml="${web.dir}/WEB-INF/web.xml">
            <manifest>
                <attribute name="Label" value="${build.label}"/>
            </manifest>
            <lib file="${main.jar}"/>
        </war>
    </target>

</project>
